<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>blog.tolleiv.de ...  </title>
    <link>//blog.tolleiv.de/tags/typo3/index.xml</link>
    <description>Recent content on blog.tolleiv.de ...  </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>&amp;copy; &lt;a href=&#34;https://github.com/tolleiv&#34;&gt;tolleiv&lt;/a&gt; 2016 - &lt;a href=&#34;http://creativecommons.org/licenses/by-sa/3.0/&#34;&gt;CC BY-SA 3.0&lt;/a&gt; - Powered by Hugo</copyright>
    <atom:link href="//blog.tolleiv.de/tags/typo3/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>TYPO3 login state and Varnish cache</title>
      <link>//blog.tolleiv.de/2012/12/typo3-login-state-and-varnish-cache/</link>
      <pubDate>Mon, 10 Dec 2012 15:56:46 +0000</pubDate>
      
      <guid>//blog.tolleiv.de/2012/12/typo3-login-state-and-varnish-cache/</guid>
      <description>

&lt;p&gt;Caching is hard in complex page setups with user specific content, especially when public pages change their content once a user is logged in. TYPO3 is smart enough to deal with the login state properly and cache appropriately. Once Varnish is involved, it&amp;rsquo;s quite tricky to cache as much as possible without loosing the dynamic content. But it&amp;rsquo;s not impossible and here&amp;rsquo;s my summary how we resolved it for &lt;a href=&#34;http://typo3.org&#34;&gt;typo3.org&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&#34;setup&#34;&gt;Setup&lt;/h4&gt;

&lt;p&gt;The basic Varnish setup is more or less always the same and best described by&lt;a href=&#34;http://www.fabrizio-branca.de/nginx-varnish-apache-magento-typo3.html&#34;&gt; Farbrizio Branca&lt;/a&gt;. On top of that we need   some TypoScript parameter tweaking to get the cache-control-headers in TYPO3 straight - &lt;a href=&#34;http://www.typo3-media.com/blog/website-caching-login.html&#34;&gt;Daniel Pötzinger&amp;rsquo;s article&lt;/a&gt; covers them best. Another very handy thing which can be found in Fabrizio&amp;rsquo;s blog is the&lt;a href=&#34;http://www.fabrizio-branca.de/make-your-magento-store-fly-using-varnish.html&#34;&gt; simplified flow chart&lt;/a&gt; for the various &lt;a href=&#34;https://www.varnish-cache.org/trac/wiki/VCLExampleDefault&#34;&gt;Varnish subroutines&lt;/a&gt;.Based on that all pages should be cached properly and your site should run smoothly. But in case you have a page with personalized content, you&amp;rsquo;ll have to reconsider some parts.&lt;/p&gt;

&lt;h4 id=&#34;problem&#34;&gt;Problem&lt;/h4&gt;

&lt;p&gt;The&lt;a href=&#34;http://typo3.org/events/add-new-event/new/&#34;&gt; event submission page on typo3.org&lt;/a&gt; is a good example. In case the user is not logged in (a.k.a &lt;em&gt;public page&lt;/em&gt;), we just want to show a message which guides him to the login. If there&amp;rsquo;s a login active (a.k.a &lt;em&gt;user page&lt;/em&gt;), we&amp;rsquo;ll show the submission form instead. In both cases we could cache the content nicely, but how would we ensure that Varnish delivers the correct content?&lt;/p&gt;

&lt;h4 id=&#34;solution&#34;&gt;Solution&lt;/h4&gt;

&lt;p&gt;Ajax could be a solution, but for large sites it&amp;rsquo;s usually smarter to avoid as much JavaScript as possible. EdgeSideIncludes (ESI) are another option, but I agree with &lt;a href=&#34;http://www.typo3-media.com/blog/website-caching-login.html&#34;&gt;Daniel&lt;/a&gt;, they&amp;rsquo;re not really useful in this case and I&amp;rsquo;d rather go with Ajax than with ESI.&lt;/p&gt;

&lt;p&gt;What we want in this scenario, is to cache the _public page _in Varnish and pass to the _user page_ generated by TYPO3 if we find that the user is logged in. But this should of course only happen on pages where this is really necessary - normal pages should just ignore the login state of the user. Therefore we need sth. to distinguish _normal_ from _login specific_ pages in Varnish. Lucky enough TYPO3 already provides a field in the pages properties which allows this distinction. Using the &lt;strong&gt;Login Behaviour (pages.fe_login_mode)&lt;/strong&gt; field, you can enable and disable the user-login for specific branches and pages*. As we want to whitelist _login specific_ pages, our root page should have the default setting &amp;ldquo;Disable Login&amp;rdquo; - this will be inherited to all sub-pages. All the _login specific_ pages should have the setting &amp;ldquo;Re-Enable login&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;Once this is done, we need a way to carry that out to Varnish. We improved &lt;a href=&#34;http://forge.typo3.org/projects/extension-cacheinfo&#34;&gt;EXT:cacheinfo&lt;/a&gt; for that purpose, with that it now carries a &amp;ldquo;&lt;strong&gt;loginAllowedInBranch&lt;/strong&gt;&amp;rdquo; or &amp;ldquo;&lt;strong&gt;noLoginAllowedInBranch&lt;/strong&gt;&amp;rdquo; value in the &amp;ldquo;&lt;strong&gt;X-T3CacheInfo&amp;rdquo;&lt;/strong&gt; header. Using all that, the Varnish VCL can be extended to make use of it like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sub vcl_hit {
  if (obj.http.X-T3CacheInfo ~ &amp;quot;loginAllowedInBranch&amp;quot;) {
    set obj.http.Cache-Control = &amp;quot;private&amp;quot;;
    if (req.http.Cookie ~ &amp;quot;(e_typo_user|PHPSESSID|_pk_.*)&amp;quot;) {
      # Do not cache requests which come from a logged in user
      return (pass);
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is straight forward. For every page which allows logins, we make sure that the client does not keep them in his cache. In case we&amp;rsquo;re actually on such a page and find the related login-cookies, we pass the request along to TYPO3, otherwise we deliver the &lt;em&gt;public page&lt;/em&gt; right away from the cache. The fact that we pass the request along to TYPO3 in some cases doesn&amp;rsquo;t mean that we&amp;rsquo;ll deliver the &lt;em&gt;user page&lt;/em&gt;, it just indicates that we&amp;rsquo;ve to rely on TYPO3 to make the right choice based on the actual login state.&lt;/p&gt;

&lt;h4 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h4&gt;

&lt;p&gt;For me the beauty here lies in the simplicity. Once you managed to wrap your head around the &lt;a href=&#34;http://www.fabrizio-branca.de/make-your-magento-store-fly-using-varnish.html&#34;&gt;flow chart&lt;/a&gt; and once you managed to deliver appropriate meta-data to Varnish, many more complex scenarios can be resolved equally.&lt;/p&gt;

&lt;p&gt;As most of the typo3.org stuff, this solution came from a great team. In this case &lt;a href=&#34;https://twitter.com/stucki&#34;&gt;Michael Stucki&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/danpoetz&#34;&gt;Daniel Pötzinger&lt;/a&gt; helped to craft the final solution - thanks guys :)&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;the naming of the field&amp;rsquo;s labels is really irritating - especially &amp;ldquo;0 - Enable login&amp;rdquo; should be &amp;ldquo;Inherit setting&amp;rdquo; as it really does not force any setting.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Finding TypoScript errors.</title>
      <link>//blog.tolleiv.de/2012/02/finding-typoscript-errors./</link>
      <pubDate>Thu, 16 Feb 2012 16:02:31 +0000</pubDate>
      
      <guid>//blog.tolleiv.de/2012/02/finding-typoscript-errors./</guid>
      <description>&lt;p&gt;When you work on TypoScript templates in TYPO3, errors might show up in the TypoScript Object Browser. Within the error messages you&amp;rsquo;ll see a more or less detailed error description with the related line number. Within most setups these line numbers won&amp;rsquo;t relate to any of your sys_template records or TypoScript files directly. But they still provide value if you know how they help to find the right spot. As it&amp;rsquo;s not too obvious how to find the right spot I&amp;rsquo;ve created a little screenshot series to guide you to the broken spots in your templates.&lt;/p&gt;

&lt;p&gt;So that&amp;rsquo;s what you might see in your TypoScript Object Browser:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;//blog.tolleiv.de/uploads/2012/02/typoscript-error.png&#34;&gt;&lt;img src=&#34;//blog.tolleiv.de/uploads/2012/02/typoscript-error.png&#34; alt=&#34;The error message from your TypoScript Object Browser might look like this.&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; Switching from there to the Template Analyzer:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;//blog.tolleiv.de/uploads/2012/02/typoscript-analyzer.png&#34;&gt;&lt;img src=&#34;//blog.tolleiv.de/uploads/2012/02/typoscript-analyzer.png&#34; alt=&#34;Switching to the TypoScript analyzer&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At the bottom of the Template Analyzer, you&amp;rsquo;ll find a &amp;ldquo;Complete TS&amp;rdquo; section and a link ~which looks like normal text.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;//blog.tolleiv.de/uploads/2012/02/typoscript-analyzer-complete.png&#34;&gt;&lt;img src=&#34;//blog.tolleiv.de/uploads/2012/02/typoscript-analyzer-complete.png&#34; alt=&#34;And you&#39;ll find a link to the fully concatenated TypoScript of your current page.&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Clicking on that link will give you the entire concatenated TypoScript and here you&amp;rsquo;ll also find that the line numbers finally match to the error message.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;//blog.tolleiv.de/uploads/2012/02/typoscript-analyzer-error.png&#34;&gt;&lt;img src=&#34;//blog.tolleiv.de/uploads/2012/02/typoscript-analyzer-error.png&#34; alt=&#34;And you&#39;ll find that the line numbers are now what you saw in the error message before (might need some scrolling).&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A well hidden gem which works most likely in all TYPO3 4.x versions ;)&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Edit: In the meantime, Ingo&amp;rsquo;s patch made it through the review process. So users of TYPO3 4.7 and above will find a nice and handy &amp;ldquo;Show details&amp;rdquo; link next to the error message. Makes it much much faster to find the broken spot. Thanks Ingo :) / (&lt;a href=&#34;http://twitter.com/irnnr&#34;&gt;@irnnr&lt;/a&gt;)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Visualizing TYPO3 Core activity</title>
      <link>//blog.tolleiv.de/2012/01/visualizing-typo3-core-activity/</link>
      <pubDate>Fri, 20 Jan 2012 08:00:12 +0000</pubDate>
      
      <guid>//blog.tolleiv.de/2012/01/visualizing-typo3-core-activity/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;DISCLAIMER: Don&amp;rsquo;t take the following too serious - when reading this post please keep in mind that the TYPO3 community itself consists of much more than just the Core team activity - many things take place outside of code repositories and can&amp;rsquo;t be measured anyhow. &lt;strong&gt;Every&lt;/strong&gt; contribution is important and &lt;strong&gt;every&lt;/strong&gt; single action has value.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Using Gerrit sometimes feels quite lonesome - you don&amp;rsquo;t really see who&amp;rsquo;s active and you don&amp;rsquo;t really get a feeling on how much is done in the TYPO3 Core at a certain point. To visualize on how active the contributors are and to show the most active members I applied a little scoring and summed up the results for the time since 2006.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.tolleiv.de/impact-chart&#34;&gt;&lt;img src=&#34;//blog.tolleiv.de/uploads/2012/01/TYPO3-Core-impact.png&#34; alt=&#34;Snippet of the impact chart.&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The scoring is quite easy - every author of a patch gets 10 points, testers get 3 and reviewers 1 point*. Looking at the stats it seems that even the statistics pulled from the old Subversion days seem to meet up with today&amp;rsquo;s numbers - of course we&amp;rsquo;ve to keep in mind that everything which was pulled from Subversion doesn&amp;rsquo;t really point to the author but to the actual committer (except if there was a &amp;ldquo;Thanks to XXXXX&amp;rdquo; reference in the commit).&lt;/p&gt;

&lt;p&gt;To visualize the numbers I choose a &lt;a href=&#34;https://github.com/blog/219-impact-graph-speedups&#34;&gt;Github&lt;/a&gt; like &lt;a href=&#34;http://blog.tolleiv.de/impact-chart&#34;&gt;impact chart&lt;/a&gt;**. Each contributor has it&amp;rsquo;s own color and line in it and whenever he got active the width of the line scales up. To maintain the overview the scale of the width isn&amp;rsquo;t linear and every contributor who&amp;rsquo;s not within the &amp;ldquo;Top 20&amp;rdquo; had to be scaled down to &amp;ldquo;1&amp;rdquo;. The line stops if the contributor didn&amp;rsquo;t get active anymore. The scores are grouped and compared by month.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.tolleiv.de/impact-chart/stat.html&#34;&gt;&lt;img src=&#34;//blog.tolleiv.de/uploads/2012/01/Core-Stats-January20121.png&#34; alt=&#34;Snapshot of the &amp;quot;Top 20&amp;quot; stats taken Jan. 14th 2012&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In addition to the chart I also created a &lt;a href=&#34;http://blog.tolleiv.de/impact-chart/stat.html&#34;&gt;table based overview for the &amp;ldquo;Top 20&amp;rdquo;&lt;/a&gt; contributors with their score***.&lt;/p&gt;

&lt;p&gt;Few things I got from the numbers. There have been 290 contributors already - simply amazing. Comparing the (huge) scores of the release managers with their fellow contributors shows once more that they can be really proud about the job they did or do. It&amp;rsquo;s also quite cool to see that many people keep sticking around. And finally it was quite surprising to see that our community manager &lt;a href=&#34;https://twitter.com/benvantende&#34;&gt;Ben van&amp;rsquo;t Ende&lt;/a&gt; can also be found in the stats. Besides that it&amp;rsquo;s up to everyone else to find their conclusions from these numbers. I hope it&amp;rsquo;s motivating everyone to see that the community is active as always.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The script I created to generate the charts isn&amp;rsquo;t too nice at the moment, &lt;del&gt;but I promise to publish it once I cleaned it up a bit. If you can&amp;rsquo;t wait to get your hands on it, feel free to send me a mail or tweet.&lt;/del&gt; - but I published it anyways: &lt;a href=&#34;https://github.com/tolleiv/Repo-Activity-Monitor&#34;&gt;github.com/tolleiv/Repo-Activity-Monitor&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Links in short: &lt;a href=&#34;http://blog.tolleiv.de/impact-chart&#34;&gt;Impact chart&lt;/a&gt;, &lt;a href=&#34;http://blog.tolleiv.de/impact-chart/stat.html&#34;&gt;Monthly &amp;ldquo;Top 20&amp;rdquo; tables&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;The scoring includes the commits to the Core master and all related submodule commits. Unfortunately the submodule commits don&amp;rsquo;t hold the reviewer and tester information. Also some of the latest changes made in the submodules may not show up at the moment because the submodule pointers haven&amp;rsquo;t been updated yet.
** Inspired by the incredible RaphaëlJS vector graphics library which is distributed with an MIT license and can be found on &lt;a href=&#34;http://raphaeljs.com/&#34;&gt;raphaeljs.com&lt;/a&gt;
*** Again - don&amp;rsquo;t take it too serious - the scoring doesn&amp;rsquo;t take into account that some patches can be written in 15 minutes where others take days. It also only uses the final testers and reviewers mentioned in the commit message, other contributions are not counted atm&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>TemplaVoila 1.6.x</title>
      <link>//blog.tolleiv.de/2012/01/templavoila-1.6.x/</link>
      <pubDate>Mon, 16 Jan 2012 07:10:33 +0000</pubDate>
      
      <guid>//blog.tolleiv.de/2012/01/templavoila-1.6.x/</guid>
      <description>&lt;p&gt;Quite some things changed in the past months and I never found the time to clear up my mind and write up a summary.&lt;/p&gt;

&lt;p&gt;First of all &lt;a href=&#34;http://typo3.org/extensions/repository/view/templavoila/current/&#34;&gt;TemplaVoila 1.6&lt;/a&gt; was released parallel to &lt;a href=&#34;http://typo3.org/download/release-notes/typo3-46/&#34;&gt;TYPO3 4.6&lt;/a&gt;. It shipped with 22 bug and compatibility fixes. In general the 1.6.x branch is supposed to be compatible with TYPO3 4.4+ which also made it possible to clean up the extension quite a bit. In addition to that TemplaVoila 1.6.1 will show up in the TER in the next few hours. It fixes 10 additional issues.&lt;/p&gt;

&lt;p&gt;Besides that, the main repository for TemplaVoila was moved to &lt;a href=&#34;git.typo3.org/TYPO3v4/Extensions/templavoila&#34;&gt;git.typo3.org&lt;/a&gt; and the old Subversion repository and my Github repository have been removed. The new repository location also enables and enforces a new way to contribute code changes for the project. Comparable to the TYPO3v4 Core every change request can be sent to Gerrit, where I can review the changes before they get merged into the repository. That workflow turns out to be very efficient for me. A detailed summary on how to contribute code to any repository hosted on &lt;a href=&#34;http://git.typo3.org&#34;&gt;git.typo3.org&lt;/a&gt; can be found on &lt;a href=&#34;http://wiki.typo3.org/Contribution_Walkthrough_Tutorials&#34;&gt;wiki.typo3.org&lt;/a&gt;. To sum up some of the steps - here&amp;rsquo;s how you submit a patch*:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone git://git.typo3.org/TYPO3v4/Extensions/templavoila.git
cd templavoila
scp -p -P 29418 &amp;lt;username&amp;gt;@review.typo3.org:hooks/commit-msg .git/hooks/
git checkout -b workingBranch
# ... work on the files ...
git add &amp;lt;changedFile&amp;gt;
git commit
git push origin HEAD:refs/for/master/&amp;lt;topic&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A further general change to the team happend more or less silently. During 2011 nobody from the old team or any new developer showed interest in the project and only few contributors helped with bugfixes or reviews. Due to that I also changed my attitude regarding future releases.
I&amp;rsquo;m currently planning to release one version parallel with every main TYPO3 4.x release, to make sure that TemplaVoila works in new versions and to make sure people can enjoy TYPO3 with TemplaVoila in the future as well. I&amp;rsquo;ll also try to keep it compatible with all &amp;ldquo;stable&amp;rdquo; releases and aim to keep the issue count within the bugtracker as low as possible.
But I&amp;rsquo;m not planning to integrate new major features such as the field content sliding (use &lt;a href=&#34;http://typo3.org/extensions/repository/view/kb_tv_cont_slide/current/&#34;&gt;EXT:kb_tv_cont_slide&lt;/a&gt; please) or a context sensitive content wizard (a.k.a &amp;ldquo;content firewall&amp;rdquo;). Also major refactorings won&amp;rsquo;t happen because they&amp;rsquo;d consume far too much of my time - therefore also the desperately needed update of the mapping module or a new new page module will not be implemented in the near future.&lt;/p&gt;

&lt;p&gt;Nevertheless I&amp;rsquo;m open for any type of contribution and I&amp;rsquo;d be happy to review and test any patch showing up in Mantis or Gerrit - I&amp;rsquo;m just not able to spent a major part of my freetime for it.&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;You have to sign the &lt;a href=&#34;http://typo3.org/about/licenses&#34;&gt;Contributor License Agreement&lt;/a&gt; to be able to push any change - it can be found on &lt;a href=&#34;http://typo3.org/about/licenses&#34;&gt;typo3.org&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Tagging page caches</title>
      <link>//blog.tolleiv.de/2011/12/tagging-page-caches/</link>
      <pubDate>Thu, 22 Dec 2011 17:23:16 +0000</pubDate>
      
      <guid>//blog.tolleiv.de/2011/12/tagging-page-caches/</guid>
      <description>&lt;p&gt;In our small TYPO3 world it&amp;rsquo;s quite common to have list and single views for extensions on specific pages. That&amp;rsquo;s quite nice because once a record is changed it allowes users to flush the caches for these pages automatically, using:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;TCEMAIN.clearCacheCmd=all|&amp;lt;pid&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;But of course it isn&amp;rsquo;t very smart to clear all caches once you have filled them up for hundred or even thousand records. To work around these limits it&amp;rsquo;s quite handy to use an API which lives in &lt;a href=&#34;http://git.typo3.org/TYPO3v4/Core.git?a=commit;h=03af46&#34;&gt;TYPO3 since 2008&lt;/a&gt;. It allows to add tags to the page cache and removes the caches by tag.&lt;/p&gt;

&lt;p&gt;Adding tags to the current page can be done with this block:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$GLOBALS[&#39;TSFE&#39;]-&amp;gt;addCacheTags(array(&#39;tx_example_model:&#39; . $id));
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Removing the caches for that specific page could look like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$GLOBALS[&#39;typo3CacheManager&#39;]-&amp;gt;getCache(&#39;cache_pages&#39;)-&amp;gt;flushByTag(&#39;tx_example_model:&#39; . $id);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Correctly integrating this with your extension is quite easy. To set the tags, add the first block into your controller and make sure you provide the proper uid for the rendered domain objects. To remove the caches once a record is saved in the backend just register a t3lib_tcemain hook and flush the tagged caches.&lt;/p&gt;

&lt;p&gt;Credits: &lt;a href=&#34;http://twitter.com/fbrnc&#34;&gt;Fabrizio Branca @fbrnc&lt;/a&gt; - thx for pointing me to it ;)&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;The &lt;a href=&#34;http://blog.tolleiv.de/2010/03/handling-data-in-typo3-with-tcemain/&#34;&gt;Tcemain-Hook&lt;/a&gt; could be integrated with these two snippets:
&lt;em&gt;EXT:example/Classes/Hooks/Tcemain.php&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class Tx_Example_Hooks_Tcemain {
    public function processDatamap_afterDatabaseOperations($status, $table, $id, $fieldArray, &amp;amp;$reference) {
        if ($table == &#39;tx_example_model&#39;) {
            $GLOBALS[&#39;typo3CacheManager&#39;]-&amp;gt;getCache(&#39;cache_pages&#39;)-&amp;gt;flushByTag(&#39;tx_example_model:&#39; . $id);
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;_EXT:example/ext&lt;em&gt;localconf.php&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$GLOBALS[&#39;TYPO3_CONF_VARS&#39;][&#39;SC_OPTIONS&#39;][&#39;t3lib/class.t3lib_tcemain.php&#39;][&#39;processDatamapClass&#39;][&#39;example&#39;] = &#39;EXT:example/Classes/Hooks/Tcemain.php:Tx_Example_Hooks_Tcemain&#39;;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Signal / Slots in Extbase</title>
      <link>//blog.tolleiv.de/2011/11/signal-/-slots-in-extbase/</link>
      <pubDate>Wed, 30 Nov 2011 17:17:02 +0000</pubDate>
      
      <guid>//blog.tolleiv.de/2011/11/signal-/-slots-in-extbase/</guid>
      <description>&lt;p&gt;A nice thing to have at hand is definately &lt;a href=&#34;http://en.wikipedia.org/wiki/Signals_and_slots&#34;&gt;Signal and Slots&lt;/a&gt;. I heard &lt;a href=&#34;http://f.oer.tel&#34;&gt;Felix&lt;/a&gt; talking about them quite often and I finally found a nice usecase and came to play with them a little bit this afternoon. And just to avoid that others have to look around too much to find how they can get them to work here&amp;rsquo;s how it&amp;rsquo;s working for me.&lt;/p&gt;

&lt;p&gt;First of all you should understand the concept. This nice little &amp;ldquo;definition&amp;rdquo; (from &lt;a href=&#34;http://flow3.typo3.org/documentation/guide/partiii/signalsandslots.html&#34;&gt;flow3.typo3.org&lt;/a&gt;) sums it up pretty well:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A signal, which contains event information as it makes sense in the case at hand, can be emitted (sent) by any part of the code and is received by one or more slots, which can be any function&lt;del&gt; in FLOW3&lt;/del&gt; in extbase.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To get this running in extbase, you&amp;rsquo;ve to get hold of the _Tx_Extbase_SignalSlot&lt;em&gt;Dispatcher&lt;/em&gt;, which is the central instance to manage all of it. Within Extbase that&amp;rsquo;s done easily with this snippet within your classes:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;   ...
    /**
     * @var Tx_Extbase_SignalSlot_Dispatcher
     */
    protected $signalSlotDispatcher;

    /**
     * @param Tx_Extbase_SignalSlot_Dispatcher $signalSlotDispatcher
     */
    public function injectSignalSlotDispatcher(Tx_Extbase_SignalSlot_Dispatcher $signalSlotDispatcher) {
        $this-&amp;gt;signalSlotDispatcher = $signalSlotDispatcher;
    }
   ...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Next thing is to make use of it. The Slot (listener) part could look like one of following blocks. In all cases you define the Signal by it&amp;rsquo;s class (not necessarily a PHP Class) and it&amp;rsquo;s name. Next to that the Slot can either be defined by a Closure, an object with a method name or a PHP-Class and a method name.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;   ...
// Using a closure
$this-&amp;gt;signalSlotDispatcher-&amp;gt;connect(
      &#39;Crunching&#39;, &#39;emitDataReady&#39;, function($data) { crunch($data) }, NULL, FALSE
);
   ...
// Using a method of the current object
$this-&amp;gt;signalSlotDispatcher-&amp;gt;connect(
     &#39;Crunching&#39;, &#39;emitDataReady&#39;, $this, &#39;crunch&#39;, FALSE
);
   ...
// Using a method of the specified class
$this-&amp;gt;signalSlotDispatcher-&amp;gt;connect(
     &#39;Crunching&#39;, &#39;emitDataReady&#39;, &#39;Cruncher&#39;, &#39;crunch&#39;, FALSE
);
   ...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To trigger the Signal which invokes the Slots registered above, you&amp;rsquo;ve to run the following code.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$this-&amp;gt;signalSlotDispatcher-&amp;gt;dispatch(&#39;Crunching&#39;, &#39;emitDataReady&#39;, array($data));
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;One thing I found was that by default the _Tx_Extbase_SignalSlot&lt;em&gt;Dispatcher&lt;/em&gt; it not a Singleton in older extbase versions. Bastian fixed that already in the &lt;a href=&#34;https://review.typo3.org/#change,6785&#34;&gt;master&lt;/a&gt; and &lt;a href=&#34;https://review.typo3.org/#change,6786&#34;&gt;1-4&lt;/a&gt; branches and lucky enough this change was part within the TYPO3 4.6.1 release. But I think it&amp;rsquo;s still important to mention that this wasn&amp;rsquo;t the default from the beginning on.&lt;/p&gt;

&lt;p&gt;Even if &lt;a href=&#34;http://flow3.typo3.org/documentation/guide/partiii/signalsandslots.html&#34;&gt;AOP is a nicer way to implement this feature&lt;/a&gt;, the extbase backport still works pretty straigh forward.&lt;/p&gt;

&lt;p&gt;Edit: One thing I&amp;rsquo;ve to add - Felix is not &amp;ldquo;just&amp;rdquo; talking about Signal/Slots - he&amp;rsquo;s the one to thank for the &lt;a href=&#34;https://review.typo3.org/1563&#34;&gt;backport&lt;/a&gt;. And now that his &lt;a href=&#34;http://blog.foertel.com/2011/10/using-signalslots-in-extbase/&#34;&gt;blog&lt;/a&gt; is running again - this post seems like a summary ;)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Release reviews (templavoila, imagemap_wizard, workspaces)</title>
      <link>//blog.tolleiv.de/2011/02/release-reviews-templavoila-imagemap_wizard-workspaces/</link>
      <pubDate>Thu, 24 Feb 2011 21:17:14 +0000</pubDate>
      
      <guid>//blog.tolleiv.de/2011/02/release-reviews-templavoila-imagemap_wizard-workspaces/</guid>
      <description>&lt;p&gt;I just push the TER upload button two times and in addition to that TYPO3 4.5.2 will be released tomorrow containing some nice workspaces updates. So here&amp;rsquo;s a short summary what happened in the extension releases.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TemplaVoila 1.5.4&lt;/strong&gt;
The current release focussed on 4.5 compatibility. It uses the new sys_language flag &amp;ldquo;format&amp;rdquo; to support sprites, it hooks into the new backend-form &lt;em&gt;(TCA)&lt;/em&gt; &amp;ldquo;layout&amp;rdquo; and add&amp;rsquo;s it&amp;rsquo;s fields to the right tabs within the backend forms and adjusts everything to work fine with the new CSRF mechanism.&lt;/p&gt;

&lt;p&gt;Besides that bug fixes for the section index, performance improvements and a couple more are included.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;One thing in conjunction with 4.5 you should be aware of is that copied elements are hidden by default. In older versions hidden elements won&amp;rsquo;t show up in the page module by default and therefore it might seem that nothing was copied, but that&amp;rsquo;s not right. With 1.5.4 the default setting was changed so hidden elements will show up in the page module. Unfortunately the old setting (to skip hidden elements) might still be present in your session settings - so please either clear your session settings or use the &amp;ldquo;Advanced function&amp;rdquo; tab in the page module to change to setting and avoid confusion.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Imagemap_wizard 0.6.0&lt;/strong&gt;
The last versions proved to be very stable and with some additional sponsoring I was able to improve the DAM and TYPO3 workspaces support. Besides that a couple of issues which showed up in 4.4 and 4.5 were fixed. One of the next features will hopefully be a useful point of interest implementation - keep your fingers crossed that someone&amp;rsquo;s clients want&amp;rsquo;s to sponsor some time for that ;)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Workspaces 4.5.1 / 4.5.2&lt;/strong&gt;
Even if it&amp;rsquo;s shipped with the Core and included in the &lt;a href=&#34;http://news.typo3.org/news/article/typo3-451-released/&#34;&gt;official release notes&lt;/a&gt;, here&amp;rsquo;s my summary of the improvements. The workspace module itself brought us lot&amp;rsquo;s of good feedback and also the new workspace preview raised some attention. Even though 4.5.0 was quite stable we weren&amp;rsquo;t able to get it working perfectly. The fixes made for 4.5.1 made sure that especially the preview window works much more stable, it introduced state persistence (so switching preview modes or module settings are memorized properly) and it brought some performance improvements.
Btw. if you didn&amp;rsquo;t check out the new workspaces features and improvements the&lt;a href=&#34;http://forge.typo3.org/projects/typo3v4-workspaces/repository/entry/workspaces/trunk/Documentation/manual.pdf&#34;&gt; new workspaces documentation from Susanne Moog&lt;/a&gt; is a good point to start.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>TemplaVoila 1.5 released</title>
      <link>//blog.tolleiv.de/2010/10/templavoila-1.5-released/</link>
      <pubDate>Sun, 03 Oct 2010 20:31:33 +0000</pubDate>
      
      <guid>//blog.tolleiv.de/2010/10/templavoila-1.5-released/</guid>
      <description>

&lt;p&gt;The new version comes with many bugfixes,new features and a closer TYPO3 integration. Overall 95 issues have been resolved in the last 4 months to finalize this versions, some of the highlights are:&lt;/p&gt;

&lt;h4 id=&#34;html5-support&#34;&gt;HTML5 support&lt;/h4&gt;

&lt;p&gt;The full list of HTML5 tags is now supported in TemplaVoila. The restrictions to specific tags was removed and the TYPO3 integrator is now able to use the full bandwidth of modern HTML. With this change also the tag-icons themself were replaced and the coloring schema was changed. The inspiration for the current color schema came from &lt;a href=&#34;http://joshduck.com/periodic-table.html&#34;&gt;Josh Duck&amp;rsquo;s &amp;ldquo;Periodic Table of the Elements&amp;rdquo;&lt;/a&gt;. In additon same mapping bugs have been resolved too - for details see &lt;a href=&#34;http://bugs.typo3.org/view.php?id=13974&#34;&gt;#13974&lt;/a&gt; and &lt;a href=&#34;http://bugs.typo3.org/view.php?id=14881&#34;&gt;#14881&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;//blog.tolleiv.de/uploads/2010/09/tv15-page-module.png&#34;&gt;&lt;img src=&#34;//blog.tolleiv.de/uploads/2010/09/tv15-page-module-300x190.png&#34; alt=&#34;TemplaVoila 1.5 page module&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&#34;typo3-4-4-look-feel-and-docheader-integration&#34;&gt;TYPO3 4.4 Look&amp;amp;Feel and docHeader integration&lt;/h4&gt;

&lt;p&gt;TYPO3 4.4 introduced a new skin and changed the look&amp;amp;feel in the backend radically. Once installed in 4.4 TemplaVoila 1.5 adjusts it&amp;rsquo;s look and provides the same usability improvements as the official page module. The page-module was optimized to use as much &amp;ldquo;official&amp;rdquo; CSS as possible to support designes with their own backend-skins. In addition to the CSS&amp;amp;Markup changes, TemplaVoila also uses the &lt;a href=&#34;http://blog.tolleiv.de/2010/07/typo3-4-4-sprites-in-your-extension/&#34;&gt;TYPO3 4.4 SpriteIcon API&lt;/a&gt; to provide and retrieve backend icons and uses the FlashMessage API to style all backend notifications.&lt;/p&gt;

&lt;p&gt;Another important step was the integration of the so called docHeader. This is the area at the very top of each backend module page which provides useful tools and action-icons. With this version TemplaVoila finally provides docHeaders within every backend-part.&lt;/p&gt;

&lt;h4 id=&#34;improved-typo3-integration&#34;&gt;Improved TYPO3 integration&lt;/h4&gt;

&lt;p&gt;Besides the visual changes the general TYPO3 integration has been improved with various modifications.&lt;/p&gt;

&lt;p&gt;With the current version there&amp;rsquo;s no need to give &amp;ldquo;Edit page&amp;rdquo; rights to you editors if they want to add or remove content elements. Just the &amp;ldquo;Edit content&amp;rdquo; right and access to the &amp;ldquo;Page&amp;gt;Content&amp;rdquo; field is enough for them. For details see: &lt;a href=&#34;http://bugs.typo3.org/view.php?id=3903&#34;&gt;#3903&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The &amp;ldquo;advached header link inclusion&amp;rdquo; is one of the integration steps in the frontend. All resources which are related to an FCE are passed through an TYPO3 API (pageRenderer). This avoids duplicate inclusion of one resource (e.g. CSS files) and enables further post-processing (e.g. compression or merging). It can be enabled using the &amp;ldquo;advancedHeaderInclusion&amp;rdquo; within your TypoScript setup which could then look like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;page = PAGE
page.typeNum = 0
page.10 = USER
page.10.userFunc = tx_templavoila_pi1-&amp;gt;main_page
page.10.advancedHeaderInclusion= 1
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;The full list of changes within this version can be found on &lt;a href=&#34;http://bugs.typo3.org/search.php?project_id=2&amp;amp;sticky_issues=on&amp;amp;target_version=1.5.0&amp;amp;sortby=last_updated&amp;amp;dir=DESC&amp;amp;hide_status_id=90&#34;&gt;bugs.typo3.org&lt;/a&gt;.
Many many thanks to all contributors and reviewers - it&amp;rsquo;s great that more people try to help out and it keeps me motivated to continue improving this great TYPO3 extension.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>TYPO3 4.4 sprites in your extension...</title>
      <link>//blog.tolleiv.de/2010/07/typo3-4.4-sprites-in-your-extension.../</link>
      <pubDate>Sun, 25 Jul 2010 08:00:29 +0000</pubDate>
      
      <guid>//blog.tolleiv.de/2010/07/typo3-4.4-sprites-in-your-extension.../</guid>
      <description>

&lt;p&gt;TYPO3 4.4 ships with a long list of improvements. One of them is the sprite API which was developed during T3UXW09. It extends the iconWorks API and enables to retrieve any backend-icon from a central sprite.&lt;/p&gt;

&lt;p&gt;As extension maintainer there are several ways to use these new parts of the API you can either just use it to display core icons, you can include your own icons and retrieve it with the new API or you can include your own sprite and retrieve the separate icons.&lt;/p&gt;

&lt;h4 id=&#34;use-sprite-icons&#34;&gt;Use sprite icons&lt;/h4&gt;

&lt;p&gt;Using sprite icons is pretty easy, to get a checkmark icon you could use this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;t3lib_iconWorks::getSpriteIcon(&#39;status-dialog-ok&#39;);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The list of all available icons can be retrieved using the &amp;lsquo;&lt;strong&gt;&lt;a href=&#34;http://typo3.org/extensions/repository/view/spriteiconoverview/current/&#34;&gt;spriteiconoverview&lt;/a&gt;&lt;/strong&gt;&amp;rsquo; extension which I just recently pushed into the TER ;)&lt;/p&gt;

&lt;h4 id=&#34;add-your-own-icons&#34;&gt;Add your own icons&lt;/h4&gt;

&lt;p&gt;The API also provides the possibility to include your extension&amp;rsquo;s icons using either single icons or your own icon sprite.
Using single icons can be done with the following code in your ext_tables.php or ext_localconf.php:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$icons = array(
     &#39;myicon&#39; =&amp;gt; t3lib_extMgm::extRelPath(&#39;myextension&#39;) . &#39;myicon.gif&#39;
);
t3lib_SpriteManager::addSingleIcons($icons, &#39;myextension&#39;);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Using this icon is easy again:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;t3lib_iconWorks::getSpriteIcon(&#39;extensions-myextension-myicon&#39;);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If your extension comes with a larger amount of icons you might want to use your own sprite. This includes your sprite as a image file and a CSS file. The css file should look like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.t3-icon-extensions-myextension {
     background-image:url(../../typo3conf/ext/myextension/myextension_sprite.gif);
}
.t3-icon-extensions-myextension-icon1 { background-position: 0px 0px; }
.t3-icon-extensions-myextension-icon2 { background-position: 0px -16px; }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The path to your sprite needs to be relative to the typo3temp/sprites/ folder, from where the (temporary) merged CSS file will be included.
This sprite can be included using:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$icons = array(
     &#39;extensions-myextension-icon1&#39;,
     &#39;extensions-myextension-icon2&#39;
);
t3lib_SpriteManager::addIconSprite(
     $icons,
     t3lib_extMgm::siteRelPath(&#39;myextension&#39;) . &#39;myextension_sprite.css&#39;
);              
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As you see it&amp;rsquo;s quite easy to include the new API, the API provides some further options for overlays and further modifications which I didn&amp;rsquo;t mention here. And as a final motivation this is a comparison between old and new API to get a &amp;ldquo;back&amp;rdquo; button:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// old API
$icon = &#39;&amp;lt;img&#39; . t3lib_iconWorks::skinImg($this-&amp;gt;doc-&amp;gt;backPath,&#39;gfx/goback.gif&#39;,&#39;width=&amp;quot;14&amp;quot; height=&amp;quot;14&amp;quot;&#39;) . &#39;alt=&amp;quot;&amp;quot; /&amp;gt;&#39;;

// new API
$icon = t3lib_iconWorks::getSpriteIcon(&#39;actions-view-go-back&#39;);
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;The sprite API is quite new and my knowledge about how to use it is also relatively fresh - so please let me know if you&amp;rsquo;ve any remarks or questions.&lt;/p&gt;

&lt;h2 id=&#34;btw-special-kudos-for-his-involvement-during-the-implementation-of-this-nice-feature-and-many-many-thanks-for-helping-me-to-understand-it-to-steffen-ritter-http-www-rs-websystems-de&#34;&gt;Btw. special kudos for his involvement during the implementation of this nice feature and many many thanks for helping me to understand it, to &lt;a href=&#34;http://www.rs-websystems.de/&#34;&gt;Steffen Ritter&lt;/a&gt;  :)&lt;/h2&gt;

&lt;p&gt;Further reading:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;If you&amp;rsquo;ve never heard of sprites you might want to read this article an &lt;a href=&#34;http://www.alistapart.com/articles/sprites&#34;&gt;alistapart.com&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://typo3.org/download/release-notes/typo3-44/&#34;&gt;TYPO3 4.4 release notes&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://news.typo3.org/news/article/t3dd10-its-all-about-sprites/&#34;&gt;news.typo3.org - T3DD10: It&amp;rsquo;s all about sprites&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://typo3.org/extensions/repository/view/spriteiconoverview/current/&#34;&gt;spriteiconoverview&lt;/a&gt; extension&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
</description>
    </item>
    
    <item>
      <title>T3DD10 Git workshop</title>
      <link>//blog.tolleiv.de/2010/07/t3dd10-git-workshop/</link>
      <pubDate>Thu, 08 Jul 2010 22:11:29 +0000</pubDate>
      
      <guid>//blog.tolleiv.de/2010/07/t3dd10-git-workshop/</guid>
      <description>&lt;p&gt;I just found that &lt;a href=&#34;http://www.xing.com/profile/Peter_Niederlag&#34;&gt;Peter&lt;/a&gt; shares the slides of the Git workshop from the T3DD10 on &lt;a href=&#34;http://www.slideshare.net/jugglefish/t3dd10-git&#34;&gt;slideshare&lt;/a&gt;. Since this 4 hour workshop was - for many reasons - one of my favorites during the T3DD10, I felt that it&amp;rsquo;s worth to mention it. And due to the fact that TYPO3 is moving very fast towards Git it&amp;rsquo;s worth to look at them ;) &amp;mdash; &lt;a href=&#34;http://www.slideshare.net/jugglefish/t3dd10-git&#34;&gt;Open workshop slides&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Btw. at the beginning I didn&amp;rsquo;t belief that a Git workshop could fill 4 hours - now I don&amp;rsquo;t think that shorter workshops make any sense :P&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using git svn for TYPO3 extension development</title>
      <link>//blog.tolleiv.de/2010/06/using-git-svn-for-typo3-extension-development/</link>
      <pubDate>Wed, 30 Jun 2010 06:00:30 +0000</pubDate>
      
      <guid>//blog.tolleiv.de/2010/06/using-git-svn-for-typo3-extension-development/</guid>
      <description>

&lt;p&gt;When I first saw a presentation about Git 2 years ago I liked it, but I was convinced that Subversion covers all I need. Things have changed and especially the bad performance of Subversion for larger repositories and the need to commit things without messing up the official trunk motivated me to look up how to get started with Git. If you need more reasons why you should look into Git, you&amp;rsquo;ll find them in [7] - anyways it&amp;rsquo;s worth to have a look how I managed to work with it ;)&lt;/p&gt;

&lt;p&gt;There are basically 2½ different tasks during the &amp;ldquo;daily&amp;rdquo; development.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;Create a local working copy a.k.a clone the repository&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Fix a bug or implement a feature and create a patch file with the changes&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Receive a patch and review it - eventually commit the changes&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&#34;0-repository-initialization&#34;&gt;0. Repository initialization&lt;/h4&gt;

&lt;p&gt;Getting started and creating the repository from an existing Subversion repository looks like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir templavoila
cd templavoila
git svn init -t tags -b branches -T trunk https://svn.typo3.org/TYPO3v4/Extensions/templavoila
git-svn fetch
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will pull the entire SVN history into your local Git repository - use &amp;ldquo;git-svn fetch -r &amp;rdquo; to reduce the amount of imported revisions.&lt;/p&gt;

&lt;p&gt;To keep your repository up-to-date you need these commands:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git stash
git-svn fetch
git rebase trunk
git stash apply
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you followed the SVN trunk/tags/branches convention you should see that it also finds tags and branches during the import. But using &amp;ldquo;git branch&amp;rdquo; afterwards you&amp;rsquo;ll see that there&amp;rsquo;s only one local branch called &amp;ldquo;master&amp;rdquo;. That&amp;rsquo;s where Git shows it&amp;rsquo;s strength the first time, because it distinguishes between local and remote branches. Work can only be done within local branches, whereas the existing SVN branches are only recognized as &amp;ldquo;remote&amp;rdquo; branches so far. To list all remote branches you can use &amp;ldquo;git branch -r&amp;rdquo;. If you followed the trunk/tags/branches convention, you should see your SVN tags and branches within this list - otherwise you might want to read [8]. To make a remote (SVN) branch available in your local repository use:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git checkout --track -b tv_1-4 templavoila_1-4
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;1-working-with-the-repository&#34;&gt;1. Working with the repository&lt;/h4&gt;

&lt;p&gt;Starting to work on a new feature or a bug always starts with a new branch in git:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git branch issue00012345
git checkout issue00012345
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You&amp;rsquo;re now working in the &amp;ldquo;issue00012345&amp;rdquo; branch and all commits will just be committed to that branch. Once you made changes  you can either just commit all modifications with:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git commit -a
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;or add particular files and commit only these files with:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git add fileA
git add fileB
git commit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;or with a nice pre commit preview which lets you decide which lines you want to commit:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git add --patch
git commit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Preparing the patch for the mailingslist:&lt;/strong&gt;
In a pure Git workflow &amp;ldquo;git format-patch&amp;rdquo; is used to communicate patches, but due to the fact that there&amp;rsquo;s a Subversion repository involved either the old style diff / patch or a workaround needs to be used to communicate changes.
Creating a patch which works for the mailinglist can basically be done using:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git diff --no-prefix master &amp;gt; myPatchFile.patch
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;An alternative workaround to create proper SVN diff files (including svn revision etc..) can be found in [10] it&amp;rsquo;s used very straight forward:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git svn-diff &amp;gt; mySvnPatchFile.patch
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-review-and-commit-patches&#34;&gt;2. Review and commit patches&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Reviewing the patch someone sent to the list:&lt;/strong&gt;
As &amp;ldquo;usual&amp;rdquo;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;patch -p0 &amp;lt; myPatchFile.patch
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;can be used to apply patch files.&lt;/p&gt;

&lt;p&gt;Once the files passed the review the changes can be committed using &amp;ldquo;&lt;strong&gt;git add&lt;/strong&gt;&amp;rdquo; and &amp;ldquo;&lt;strong&gt;git commit&lt;/strong&gt;&amp;rdquo; as shown before.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Committing to Subversion:&lt;/strong&gt;
Once you committed everything to your local repository you&amp;rsquo;re able to perform this command to &amp;ldquo;forward&amp;rdquo; your commits to the Subversion repository.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git svn dcommit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Practically every single commit within git will also be reflected as a single Subversion commit. For several reason this might not always suit your situation.As a workaround you could merge all commits during the merge of your feature branches into the master branch using:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git merge --commit --squash issue00012345
git svn dcommit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Of course I don&amp;rsquo;t recommend to do this for your regular work since have small granular commits is always better.&lt;/p&gt;

&lt;h4 id=&#34;sources-and-further-reading&#34;&gt;Sources and further reading&lt;/h4&gt;

&lt;p&gt;[1] &lt;a href=&#34;http://spyced.blogspot.com/2009/06/patch-oriented-development-made-sane.html&#34;&gt;Patch-oriented development made sane with git-svn&lt;/a&gt;
[2] &lt;a href=&#34;http://utsl.gen.nz/talks/git-svn/intro.html#using&#34;&gt;An introduction to git-svn for Subversion/SVK users and deserters&lt;/a&gt;
[3] &lt;a href=&#34;http://git-scm.org/course/svn.html&#34;&gt;Git - SVN Crash Course&lt;/a&gt;
[4] &lt;a href=&#34;http://trac.parrot.org/parrot/wiki/git-svn-tutorial&#34;&gt;Getting the GIT checkout&lt;/a&gt;
[5] &lt;a href=&#34;http://nathanj.github.com/gitguide/tour.html&#34;&gt;An Illustrated Guide to Git on Windows&lt;/a&gt;
[6] &lt;a href=&#34;http://stackoverflow.com/questions/1129688/git-svn-workflow-feature-branches-and-merge&#34;&gt;git svn workflow -
feature branches and merge&lt;/a&gt;
[7] &lt;a href=&#34;http://whygitisbetterthanx.com/#any-workflow&#34;&gt;whygitisbetterthanx.com&lt;/a&gt;
[8] &lt;a href=&#34;http://www.dmo.ca/blog/20070608113513/&#34;&gt;Multiple branches using git-svn&lt;/a&gt;
[9] &lt;a href=&#34;http://www.viget.com/extend/effectively-using-git-with-subversion/&#34;&gt;Effectively using Git with subversion&lt;/a&gt;
[10] &lt;a href=&#34;http://mojodna.net/2009/02/24/my-work-git-workflow.html&#34;&gt;Git Workflow with Upstream SVN&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&#34;notes&#34;&gt;Notes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Don&amp;rsquo;t try to dcommit to &lt;a href=&#34;https://svn.typo3.org/TYPO3v4/Extensions/templavoila&#34;&gt;https://svn.typo3.org/TYPO3v4/Extensions/templavoila&lt;/a&gt; unless you know what you&amp;rsquo;re doing - I just used it to show you that it&amp;rsquo;s even working with large history projects.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;For projects hosted on forge.typo3.org there might be a native git support soon - stay tuned&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Let me know if you had problems with any of the snippets&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Further information about the review process for the TYPO3 Core and several other TYPO3 related projects can be found on &lt;a href=&#34;http://typo3.org/teams/core/resources/maintenance-policy/&#34;&gt;typo3.org&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>TYPO3 workspaces</title>
      <link>//blog.tolleiv.de/2010/06/typo3-workspaces/</link>
      <pubDate>Tue, 15 Jun 2010 17:54:47 +0000</pubDate>
      
      <guid>//blog.tolleiv.de/2010/06/typo3-workspaces/</guid>
      <description>&lt;p&gt;One of the enterprise features TYPO3 has to offer is versioning and workspace handling. &lt;a href=&#34;http://typo3.org/community/people/kaspers-korner/&#34;&gt;Kasper&lt;/a&gt; did a great job when he initially brough these featues into TYPO3. Unfortunately during the last years they became orphans and nobody really took care of them. There are multiple reasons for that, one was that Kasper didn&amp;rsquo;t allow big changes, another one was that everyone was somehow able to live with the existing odds they had but probable the most important one was that it was just to complicated to improve them alone without knowing the big picture.&lt;/p&gt;

&lt;p&gt;The good news is that these times are over and that some important changes to improve workspace handling are planned for
 the upcomming TYPO3 4.5 (read more on &lt;a href=&#34;http://news.typo3.org/news/article/bringing-workspaces-up-to-speed/&#34;&gt;TYPO3.org&lt;/a&gt;) and the cool news is that I was lucky enough to be part of that team and that I was able to attend a great &amp;ldquo;kickoff&amp;rdquo; meeting two weeks ago.&lt;/p&gt;

&lt;p&gt;What changes we plan can be found on &lt;a href=&#34;http://news.typo3.org/news/article/bringing-workspaces-up-to-speed/&#34;&gt;TYPO3.org&lt;/a&gt;, a detailed protocol of the meeting can be found &lt;a href=&#34;http://forge.typo3.org/attachments/download/3190/2010-06-01_TYPO3_Versioning_and_Workspaces_Meeting.pdf&#34;&gt;here&lt;/a&gt; in addition.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m happy to be part of that and I hope everyone on the team can keep up his/her motivation.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Update see &lt;a href=&#34;http://news.typo3.org/news/article/t3dd10-workspace-progress/&#34;&gt;typo3.org&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>tiny update...</title>
      <link>//blog.tolleiv.de/2010/05/tiny-update.../</link>
      <pubDate>Sat, 08 May 2010 16:20:34 +0000</pubDate>
      
      <guid>//blog.tolleiv.de/2010/05/tiny-update.../</guid>
      <description>&lt;p&gt;I&amp;rsquo;m pretty busy in these days and unfortunately there&amp;rsquo;s not much time to write blogposts. In detail there&amp;rsquo;s currently a long list of feature wishes and bugs for TemplaVoila which need my attention and in addition I also already started to prepare a workshop for the &lt;a href=&#34;http://t3dd10.typo3.org/&#34;&gt;T3DD10&lt;/a&gt; about Git*.&lt;/p&gt;

&lt;p&gt;Just to keep this blog alive this is what I found interesting during the last weeks:&lt;/p&gt;

&lt;p&gt;For TYPO3 enthusiasts especially the changes within the TYPO3 Core regarding the integration of further T3UX09 results and all the small changes which happen to get 4.4 ready might be of the biggest interest (&lt;a href=&#34;https://svn.typo3.org/TYPO3v4/Core/trunk/ChangeLog&#34;&gt;https://svn.typo3.org/TYPO3v4/Core/trunk/ChangeLog&lt;/a&gt;). Besides that Sebastian Kurfürst tweeted that he finished the last chapter of his Extbase/Fluid book and Amazon says that they deliver it in the first weeks of July. I think once his book is out we&amp;rsquo;ll see much more people starting to work with Extbase and Fluid.
It also seems that the TYPO3 v5 project &amp;ndash; called &amp;ldquo;Phoenix&amp;rdquo; &amp;ndash; is getting more and more relevant. They decided to &lt;a href=&#34;http://news.typo3.org/news/article/scrumify-phoenix/&#34;&gt;scrumify the delvelopment&lt;/a&gt; and started to do Sprints to achieve quick and visible results. Sounds like a good way to go - let&amp;rsquo;s see how long they keep that up. Besides that there&amp;rsquo;s also an interesting mail Robert Lemke posted in a newsgroup to answer the rumors about the why v5 takes so long and why they had to start from scratch and so on - &lt;a href=&#34;http://lists.typo3.org/pipermail/typo3-dev/2010-April/039958.html&#34;&gt;very interesting statements&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Besides that you might like these bits and bytes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://sebastian-bergmann.de/archives/885-Stubbing-Hard-Coded-Dependencies.html&#34;&gt;Sebastian Bergmanns &amp;ldquo;testing untestable code&amp;rdquo; series&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.normansblog.de/demos/browser-support-checklist-css3/&#34;&gt;CSS3 browser compatibility checklist&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://buzz.typo3.org/teams/core/article/43-treasure-trove-the-system-registry/&#34;&gt;TYPO3 4.3 Treasure Trove: the system registry&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;*If anyone wants to help with the Git workshop or has suggestions feel free to contact me. I don&amp;rsquo;t feel really prepared for it yet but I also think that someone has to present Git to the TYPO3 community since Subversion kinda sucks in certain aspects - also the workshop itself is not confirmed yet but I&amp;rsquo;m pretty sure it will happen since lot&amp;rsquo;s of people are interested to hear about it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Crawler 3.1 release &#43; podcast</title>
      <link>//blog.tolleiv.de/2010/03/crawler-3.1-release-&#43;-podcast/</link>
      <pubDate>Wed, 31 Mar 2010 22:35:20 +0000</pubDate>
      
      <guid>//blog.tolleiv.de/2010/03/crawler-3.1-release-&#43;-podcast/</guid>
      <description>&lt;p&gt;Nearly a month after version 3.0.5, we published 3.1.0 of the well known crawler extension today. The main work for that step was related to several bugfixes, a better scheduler integration, some CLI-API enhancements, better testcases and (finally) some documentation updates. Most kudos go to Michael Klapper who took over the responsibility for this release and who also fixed a decent amount of bugs.
You can download the extension in the &lt;a href=&#34;http://typo3.org/extensions/repository/view/crawler/current/&#34;&gt;TER &lt;/a&gt; and hopefully this time OpenOffice didn&amp;rsquo;t trick us again and you&amp;rsquo;ll be able to see a shiny new extension manual on typo3.org as well.&lt;/p&gt;

&lt;p&gt;Besides that, Kasper just released the podcast with me talking about version 3.0 of the crawler and about further improvements for the staticpub extension. You&amp;rsquo;ll find that on &lt;a href=&#34;http://typo3.org/podcasts/kasper&#34;&gt;typo3.org/podcasts/kasper&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>TemplaVoila 1.4.2 released</title>
      <link>//blog.tolleiv.de/2010/03/templavoila-1.4.2-released/</link>
      <pubDate>Mon, 15 Mar 2010 23:39:53 +0000</pubDate>
      
      <guid>//blog.tolleiv.de/2010/03/templavoila-1.4.2-released/</guid>
      <description>&lt;p&gt;Yesterday the 2nd team release of TemplaVoila was uploaded into the &lt;a href=&#34;http://typo3.org/extensions/repository/view/templavoila/current/&#34;&gt;TER&lt;/a&gt;. It&amp;rsquo;s basically a maintenance release which fixes more than 100 bugs. But since we haven&amp;rsquo;t been that straight distinguishing between bug and usability feature, you&amp;rsquo;ll see a couple of new things within this release.&lt;/p&gt;

&lt;p&gt;The high level release notes are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;page module is now customizable with CSS and JavaScript&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;handling of static data structures are improved and fully working now&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;wizards are improved, new page wizard is more explaining&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;visual cleanups&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;new hooks for eTypes (elements added by mapping interface)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;new classes for preview in page module, easy to override by extensions&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;added missing localisations&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;enhanced drag-and-drop in page module&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;over 100 Bugs are fixed&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;updated manual&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;During the installation your TYPO3 Extension Manager will ask to perform a couple of database upgrades. These upgrades aren&amp;rsquo;t really critical because they just enlarge some database fields, which will make sure that your data really fit&amp;rsquo;s in.&lt;/p&gt;

&lt;p&gt;Just to point one thing out - especially the page module has been improved to be more flexible in certain parts.&lt;/p&gt;

&lt;p&gt;These lines of TSConfig can be used to add CSS or JavaScript into the page module and enable easy customizations:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mod.web_txtemplavoilaM1.stylesheet = ../fileadmin/css/tvpagemodule.css

mod.web_txtemplavoilaM1.javascript {
  file1 = ../fileadmin/templates/js/jquery.js
  file2 = ../fileadmin/templates/css/backend.js
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Further customizations is provided using the &amp;ldquo;&lt;strong&gt;mod.web_txtemplavoilaM1.blindIcons&lt;/strong&gt;&amp;rdquo; configuration or with individual content preview classes (configured though &amp;ldquo;&lt;strong&gt;$GLOBALS[&amp;lsquo;TYPO3_CONF_VARS&amp;rsquo;][&amp;lsquo;EXTCONF&amp;rsquo;][&amp;lsquo;templavoila&amp;rsquo;][&amp;lsquo;mod1&amp;rsquo;][&amp;lsquo;renderPreviewContent&amp;rsquo;]&lt;/strong&gt;&amp;rdquo; - see ext_localconf.php).&lt;/p&gt;

&lt;p&gt;We haven&amp;rsquo;t discussed what the direction for the next versions really looks like. From my perspective better TYPO3 integration, some kind of code cleanup and also the integration of some features which arise with TYPO3 4.4 will be somehow on our schedule. But since &lt;a href=&#34;http://blog.tolleiv.de/2010/03/re-farewell-templavoila/&#34;&gt;TemplaVoila isn&amp;rsquo;t a one man show anymore&lt;/a&gt;, this isn&amp;rsquo;t just my decision and in addition I&amp;rsquo;d like to encourage everyone to send feedback, bugfixes or new features just to give us an impression what you like or dislike in the current version.&lt;/p&gt;

&lt;p&gt;Last but not least, I&amp;rsquo;d like to thank everyone who was somehow involved in the release, especially Steffen Kamper who shared lot of inspiration and who has spent many hours to debug and fix some really tricky issues.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>