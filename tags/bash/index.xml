<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bash on blog.tolleiv.de ...  </title>
    <link>//blog.tolleiv.de/tags/bash/</link>
    <description>Recent content in Bash on blog.tolleiv.de ...  </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>&amp;copy; &lt;a href=&#34;https://github.com/tolleiv&#34;&gt;tolleiv&lt;/a&gt; 2016 - &lt;a href=&#34;http://creativecommons.org/licenses/by-sa/3.0/&#34;&gt;CC BY-SA 3.0&lt;/a&gt; - Powered by Hugo</copyright>
    <lastBuildDate>Thu, 18 Jun 2009 21:54:34 +0000</lastBuildDate>
    
	<atom:link href="//blog.tolleiv.de/tags/bash/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>bash: small improvement for the &#34;cd&#34; builtin</title>
      <link>//blog.tolleiv.de/2009/06/bash-small-improvement-for-the-cd-builtin/</link>
      <pubDate>Thu, 18 Jun 2009 21:54:34 +0000</pubDate>
      
      <guid>//blog.tolleiv.de/2009/06/bash-small-improvement-for-the-cd-builtin/</guid>
      <description>If you use the shell and walk around in directories wouldn&amp;rsquo;t it be cool to have &amp;ldquo;cd &amp;hellip;&amp;rdquo; to move 2 levels up, &amp;ldquo;cd &amp;hellip;.&amp;rdquo; to move 3 levels up &amp;hellip;? I&amp;rsquo;m not sure if there&amp;rsquo;s an easier way to resolve it but the following lines work pretty nice so far and they just made it into my default .bashrc :P
cd() { if [[ &amp;quot;$1&amp;quot; =~ ^\.\.\.+$ ]]; then cd `echo &amp;quot;$1&amp;quot; | sed &#39;s/\.</description>
    </item>
    
    <item>
      <title>shell command: translate </title>
      <link>//blog.tolleiv.de/2009/04/shell-command-translate/</link>
      <pubDate>Tue, 28 Apr 2009 16:22:55 +0000</pubDate>
      
      <guid>//blog.tolleiv.de/2009/04/shell-command-translate/</guid>
      <description>&amp;ldquo;Translate, squeeze, and/or delete characters from standard input, writing to standard output.&amp;rdquo;
 &amp;hellip; that&amp;rsquo;s the manpage description of the shell-command I just found (with the help of a good friend) &amp;hellip; and besides sed this is a very handy way to do simple string-operations on stdin.
He used it to replace (old) Mac newline characters with Unix newline charaters within files (as seen on wikipedia): tr &#39;\r&#39; &#39;\n&#39; &amp;lt; old.</description>
    </item>
    
    <item>
      <title>find the newest file within a folder....</title>
      <link>//blog.tolleiv.de/2009/04/find-the-newest-file-within-a-folder..../</link>
      <pubDate>Tue, 14 Apr 2009 20:14:42 +0000</pubDate>
      
      <guid>//blog.tolleiv.de/2009/04/find-the-newest-file-within-a-folder..../</guid>
      <description>These are two neat little commands to find the newest and oldest file within a folder and it&amp;rsquo;s subfolder: find . -type f -printf &amp;quot;%T@ %p \n&amp;quot; | sort -n -k 1,1 | awk &#39;{print $2}&#39; | tail -n 1 find . -type f -printf &amp;quot;%T@ %p \n&amp;quot; | sort -n -k 1,1 | awk &#39;{print $2}&#39; | head -n 1 If you&amp;rsquo;d like to know how old/young these files are try these two: find .</description>
    </item>
    
    <item>
      <title>track time for a subroutine within a shell-script</title>
      <link>//blog.tolleiv.de/2008/07/track-time-for-a-subroutine-within-a-shell-script/</link>
      <pubDate>Thu, 10 Jul 2008 21:55:00 +0000</pubDate>
      
      <guid>//blog.tolleiv.de/2008/07/track-time-for-a-subroutine-within-a-shell-script/</guid>
      <description>The following code-snippet is a shell-script which does the following:
 Track the time for a block of shell commands
 Check if the time was less than x seconds (the example uses 10 seconds)
 If the block run through too fast the script waits/sleeps a few seconds
 Run all this within a loop so that the block of shell-commands is executed periodically
  I used the script combined with a PHP script which processes a queue.</description>
    </item>
    
  </channel>
</rss>