<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Factory on blog.tolleiv.de ...  </title>
    <link>//blog.tolleiv.de/categories/factory/</link>
    <description>Recent content in Factory on blog.tolleiv.de ...  </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>&amp;copy; &lt;a href=&#34;https://github.com/tolleiv&#34;&gt;tolleiv&lt;/a&gt; 2016 - &lt;a href=&#34;http://creativecommons.org/licenses/by-sa/3.0/&#34;&gt;CC BY-SA 3.0&lt;/a&gt; - Powered by Hugo</copyright>
    <lastBuildDate>Mon, 23 Jun 2008 18:20:00 +0000</lastBuildDate>
    
	<atom:link href="//blog.tolleiv.de/categories/factory/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Factory [GoF]</title>
      <link>//blog.tolleiv.de/2008/06/factory-gof/</link>
      <pubDate>Mon, 23 Jun 2008 18:20:00 +0000</pubDate>
      
      <guid>//blog.tolleiv.de/2008/06/factory-gof/</guid>
      <description>Do you remember the Façade pattern post? Sure you do :) - I described a child which asked his granny whether she could bake some cookies. So how this happens in a formal way was describe within theFaçade pattern post ;) but the basic action &amp;ldquo;to ask for sth.&amp;rdquo; is described here&amp;hellip;
As you might remember we had a child, probably a lazy one, which was in the mood to eat some cookies but since the cookie tin was empty it asked his granny to bake some new.</description>
    </item>
    
    <item>
      <title>Query Object [PoEEA]</title>
      <link>//blog.tolleiv.de/2008/06/query-object-poeea/</link>
      <pubDate>Fri, 20 Jun 2008 17:29:00 +0000</pubDate>
      
      <guid>//blog.tolleiv.de/2008/06/query-object-poeea/</guid>
      <description>Maybe you remember the Specification Pattern I explained some weeks ago. It enabled a easy and intuitive searching within large object-collections. A drawback of my example was that I stored the objects in the memory. This can be really ineffective if you want a single object out of hundreds, because you have to create all of them to see which one fits the specification. Normally you want to limit the number of objects and you also don&amp;rsquo;t store large datasets in memory.</description>
    </item>
    
    <item>
      <title>Plugin [PoEAA]</title>
      <link>//blog.tolleiv.de/2008/06/plugin-poeaa/</link>
      <pubDate>Thu, 05 Jun 2008 01:11:00 +0000</pubDate>
      
      <guid>//blog.tolleiv.de/2008/06/plugin-poeaa/</guid>
      <description>I&amp;rsquo;m sure you&amp;rsquo;re pretty often in the situation that you have to switch something depending on the context you&amp;rsquo;re currently in. For example most people change their eating habits before summer - I also do :P
Sometimes this is what you also want to have in your software. To achieve different behaviour you normally just implement two different classes or aggregates and since they have the same &amp;ldquo;meaning&amp;rdquo; they normally share a interface (a.</description>
    </item>
    
  </channel>
</rss>