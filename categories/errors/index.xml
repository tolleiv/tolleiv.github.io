<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Errors on blog.tolleiv.de ...  </title>
    <link>//blog.tolleiv.de/categories/errors/index.xml</link>
    <description>Recent content in Errors on blog.tolleiv.de ...  </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>&amp;copy; &lt;a href=&#34;https://github.com/tolleiv&#34;&gt;tolleiv&lt;/a&gt; 2016 - &lt;a href=&#34;http://creativecommons.org/licenses/by-sa/3.0/&#34;&gt;CC BY-SA 3.0&lt;/a&gt; - Powered by Hugo</copyright>
    <atom:link href="//blog.tolleiv.de/categories/errors/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Inherit abstract functions....</title>
      <link>//blog.tolleiv.de/2008/06/inherit-abstract-functions..../</link>
      <pubDate>Wed, 11 Jun 2008 20:28:00 +0000</pubDate>
      
      <guid>//blog.tolleiv.de/2008/06/inherit-abstract-functions..../</guid>
      <description>&lt;p&gt;A error I find from time to time when I work with inheritance is this one:&lt;/p&gt;

&lt;p&gt;Fatal error: Can&amp;rsquo;t inherit abstract function Cookie::setFlavor() (previously declared abstract in ChocolateCookie) in &amp;hellip;&lt;/p&gt;

&lt;p&gt;This happens when you try to define multiple abstract classes or interfaces with the same abstract functions - it&amp;rsquo;s right that this errors shows up, but today I stuck on this error for a while because I did not see the reason for that - so that&amp;rsquo;s a reminder for me ;)&lt;/p&gt;

&lt;p&gt;And the tasty example to reproduce this error:&lt;/p&gt;

&lt;p&gt;abstract class Cookie {&lt;br /&gt;
abstract public function setFlavor($flavor);&lt;br /&gt;
}&lt;/p&gt;

&lt;p&gt;abstract class ChocolateCookie extends Cookie {&lt;br /&gt;
abstract public function setFlavor($flavor);&lt;br /&gt;
}&lt;/p&gt;

&lt;p&gt;There are also some rejected bugreports about that :P &lt;a href=&#34;http://bugs.php.net/bug.php?id=35057&#34;&gt;#35057&lt;/a&gt; &lt;a href=&#34;http://bugs.php.net/bug.php?id=35832&#34;&gt;#35832&lt;/a&gt; &lt;a href=&#34;http://bugs.php.net/bug.php?id=41145&#34;&gt;#41145&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>error_reposting and exceptions....</title>
      <link>//blog.tolleiv.de/2008/05/error_reposting-and-exceptions..../</link>
      <pubDate>Tue, 20 May 2008 21:40:00 +0000</pubDate>
      
      <guid>//blog.tolleiv.de/2008/05/error_reposting-and-exceptions..../</guid>
      <description>&lt;p&gt;I just found this line:&lt;/p&gt;

&lt;p&gt;set_error_handler(create_function(&amp;lsquo;$x, $y&amp;rsquo;, &amp;lsquo;throw new Exception($y, $x);&amp;rsquo;), E_ALL~E_NOTICE);&lt;/p&gt;

&lt;p&gt;in the comments on php.net and did a short test to see whether it works. Normally I used to have a global function which passes all the errors through a logging-chain (FILE/MAIL/DISPLAY) but having exceptions could be more comfortable because you might sometimes want to make decisions locally and not on a global scope and just setting and re-setting the error-handler is not the best idea for this&amp;hellip; I&amp;rsquo;m not sure if I get used to it, because the error-handling function did a good job for the last years &amp;hellip; we&amp;rsquo;ll see :)&lt;br /&gt;
So that&amp;rsquo;s the full example code:&lt;/p&gt;

&lt;p&gt;set_error_handler(create_function(&amp;lsquo;$x, $y&amp;rsquo;, &amp;lsquo;throw new Exception($y, $x);&amp;rsquo;), E_ALL);&lt;br /&gt;
try {&lt;/p&gt;

&lt;p&gt;$errors = array(&lt;br /&gt;
                    E_USER_WARNING =&amp;gt; &amp;ldquo;something might be wrong&amp;rdquo;,&lt;br /&gt;
                    E_USER_NOTICE =&amp;gt; &amp;ldquo;it works but I don&amp;rsquo;t like it&amp;rdquo;,&lt;br /&gt;
                    E_USER_ERROR =&amp;gt; &amp;ldquo;something went completly wrong&amp;rdquo;,&lt;br /&gt;
);&lt;/p&gt;

&lt;p&gt;//    echo $name; //should cause a E_NOTICE&lt;/p&gt;

&lt;p&gt;foreach($errors as $code=&amp;gt;$msg) {&lt;br /&gt;
    try {&lt;br /&gt;
        trigger_error($msg,$code);&lt;br /&gt;
    }&lt;br /&gt;
    catch (Exception $e) {&lt;br /&gt;
        if(!in_array($e-&amp;gt;getCode(),array(E_USER_WARNING,E_USER_NOTICE))) {&lt;br /&gt;
            throw $e;&lt;br /&gt;
        }&lt;br /&gt;
        else {&lt;br /&gt;
            // not a big deal we can push this into a log-file and continue or work&amp;hellip;&lt;br /&gt;
            echo &amp;ldquo;local exception: (&amp;ldquo;.$e-&amp;gt;getCode(). &amp;ldquo;) &amp;ldquo;.$e-&amp;gt;getMessage().&amp;rdquo;&lt;br/&gt;&amp;rdquo;;&lt;br /&gt;
        }&lt;br /&gt;
    }&lt;br /&gt;
}&lt;/p&gt;

&lt;p&gt;}&lt;br /&gt;
catch (Exception $e) {&lt;br /&gt;
echo &amp;ldquo;global exception:&amp;ldquo;.$e-&amp;gt;getMessage().&amp;rdquo;&lt;br/&gt;&amp;rdquo;;&lt;br /&gt;
}&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>