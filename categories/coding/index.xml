<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Coding on blog.tolleiv.de ...  </title>
    <link>//blog.tolleiv.de/categories/coding/</link>
    <description>Recent content in Coding on blog.tolleiv.de ...  </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>&amp;copy; &lt;a href=&#34;https://github.com/tolleiv&#34;&gt;tolleiv&lt;/a&gt; 2016 - &lt;a href=&#34;http://creativecommons.org/licenses/by-sa/3.0/&#34;&gt;CC BY-SA 3.0&lt;/a&gt; - Powered by Hugo</copyright>
    <lastBuildDate>Thu, 06 Jun 2013 18:47:56 +0000</lastBuildDate>
    
	<atom:link href="//blog.tolleiv.de/categories/coding/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Using genetic algorithms to optimize Apache Solr boost factors.</title>
      <link>//blog.tolleiv.de/2013/06/using-genetic-algorithms-to-optimize-apache-solr-boost-factors./</link>
      <pubDate>Thu, 06 Jun 2013 18:47:56 +0000</pubDate>
      
      <guid>//blog.tolleiv.de/2013/06/using-genetic-algorithms-to-optimize-apache-solr-boost-factors./</guid>
      <description>Configuration interface.One thing I took along from last year&amp;rsquo;s ApacheCon was the idea to combine Apache Solr along with some mathematical search algorithms to figure out boost factor values. I did some work on that back then and on the way to this year&amp;rsquo;s BerlinBuzzwords. Now I finally have a proof-of-concept working which I&amp;rsquo;d like to share. If you want to have a look right away - the code can be found on Github.</description>
    </item>
    
    <item>
      <title>Signal / Slots in Extbase</title>
      <link>//blog.tolleiv.de/2011/11/signal-/-slots-in-extbase/</link>
      <pubDate>Wed, 30 Nov 2011 17:17:02 +0000</pubDate>
      
      <guid>//blog.tolleiv.de/2011/11/signal-/-slots-in-extbase/</guid>
      <description>A nice thing to have at hand is definately Signal and Slots. I heard Felix talking about them quite often and I finally found a nice usecase and came to play with them a little bit this afternoon. And just to avoid that others have to look around too much to find how they can get them to work here&amp;rsquo;s how it&amp;rsquo;s working for me.
First of all you should understand the concept.</description>
    </item>
    
    <item>
      <title>imagemap_wizard 0.5.3</title>
      <link>//blog.tolleiv.de/2009/10/imagemap_wizard-0.5.3/</link>
      <pubDate>Thu, 22 Oct 2009 19:18:39 +0000</pubDate>
      
      <guid>//blog.tolleiv.de/2009/10/imagemap_wizard-0.5.3/</guid>
      <description>Last Sunday I&amp;rsquo;ve released the first official stable version of my imagemap_wizard extension (TER). I though that&amp;rsquo;s a good moment to review the introduction text on the project-homepage and that&amp;rsquo;s how it looks like - forge.typo3.org/projects/show/extension-imagemap_wizard
Especially due to the missing/broken TER download counter I&amp;rsquo;m still not sure whether the work was worth it. I hope some marketing and the given information about all the cool featutes is enough for newbees and TYPO3 pro&amp;rsquo;s.</description>
    </item>
    
    <item>
      <title>multiple arguments for mocked functions....</title>
      <link>//blog.tolleiv.de/2009/08/multiple-arguments-for-mocked-functions..../</link>
      <pubDate>Mon, 17 Aug 2009 21:38:45 +0000</pubDate>
      
      <guid>//blog.tolleiv.de/2009/08/multiple-arguments-for-mocked-functions..../</guid>
      <description>If you look into the PHPUnit documentation (http://www.phpunit.de/manual/3.3/en/test-doubles.html#test-doubles.mock-objects ) you&amp;rsquo;ll see some nice examples but non of them shows how to translate a function with multiple arguments into a mock-assumption.
Within the examples you&amp;rsquo;ll find: $observer-&amp;gt;expects($this-&amp;gt;once())-&amp;gt;method(&#39;update&#39;) -&amp;gt;with($this-&amp;gt;equalTo(&#39;something&#39;)); 
So what if the &amp;ldquo;update&amp;rdquo; function has two arguments, pretty easy: $observer-&amp;gt;expects($this-&amp;gt;once())-&amp;gt;method(&#39;update&#39;) -&amp;gt;with($this-&amp;gt;equalTo(&#39;something&#39;), $this-&amp;gt;equalTo(&#39;something else&#39;)); 
I guess Sebastian though that that there&amp;rsquo;s no need for documentation if something is so obvious :(</description>
    </item>
    
    <item>
      <title>www.encodechain.com</title>
      <link>//blog.tolleiv.de/2009/08/www.encodechain.com/</link>
      <pubDate>Sat, 08 Aug 2009 12:54:13 +0000</pubDate>
      
      <guid>//blog.tolleiv.de/2009/08/www.encodechain.com/</guid>
      <description>I just &amp;ldquo;released&amp;rdquo; encodechain.com. A little tool which enables to combine various popular PHP conversion methods and to check how they affect your input&amp;hellip; feel free to give me some feedback :)
I&amp;rsquo;m also not sure whether I choose the right name for it &amp;hellip; O_o</description>
    </item>
    
    <item>
      <title>bash: small improvement for the &#34;cd&#34; builtin</title>
      <link>//blog.tolleiv.de/2009/06/bash-small-improvement-for-the-cd-builtin/</link>
      <pubDate>Thu, 18 Jun 2009 21:54:34 +0000</pubDate>
      
      <guid>//blog.tolleiv.de/2009/06/bash-small-improvement-for-the-cd-builtin/</guid>
      <description>If you use the shell and walk around in directories wouldn&amp;rsquo;t it be cool to have &amp;ldquo;cd &amp;hellip;&amp;rdquo; to move 2 levels up, &amp;ldquo;cd &amp;hellip;.&amp;rdquo; to move 3 levels up &amp;hellip;? I&amp;rsquo;m not sure if there&amp;rsquo;s an easier way to resolve it but the following lines work pretty nice so far and they just made it into my default .bashrc :P
cd() { if [[ &amp;quot;$1&amp;quot; =~ ^\.\.\.+$ ]]; then cd `echo &amp;quot;$1&amp;quot; | sed &#39;s/\.</description>
    </item>
    
    <item>
      <title>jQuery performance</title>
      <link>//blog.tolleiv.de/2009/06/jquery-performance/</link>
      <pubDate>Mon, 15 Jun 2009 06:53:58 +0000</pubDate>
      
      <guid>//blog.tolleiv.de/2009/06/jquery-performance/</guid>
      <description>jQuery 1.3 made a huge step especially towards better performance. But it&amp;rsquo;s not only the framework, from time to time it&amp;rsquo;s the developer who should care about performance too. Artzstudio.com made up a really good summary of how you should change your coding-style to achieve a higher performance with jQuery.
In my opinion the most important things are:
 Use ID selectors whenever possible since this can be directly mapped to getElementById() it much faster then all the other selectors</description>
    </item>
    
    <item>
      <title>my jQuery 1.3.2 update experience</title>
      <link>//blog.tolleiv.de/2009/06/my-jquery-1.3.2-update-experience/</link>
      <pubDate>Thu, 11 Jun 2009 07:27:34 +0000</pubDate>
      
      <guid>//blog.tolleiv.de/2009/06/my-jquery-1.3.2-update-experience/</guid>
      <description>Over the last days I did some small steps to clean up the code of my TYPO3 imagemap extension. During that process I wanted to update jQuery from 1.2.6 to 1.3.2. Initially this went fine but after some testing I found this strange error:
[Exception... &amp;quot;&#39;Syntax error, unrecognized expression: #&#39; when calling method: [nsIDOMEventListener::handleEvent]&amp;quot; nsresult: &amp;quot;0x8057001e (NS_ERROR_XPC_JS_THREW_STRING)&amp;quot; location: &amp;quot;&amp;lt;unknown&amp;gt;&amp;quot;
Due to the verbosity of the message (location &amp;ldquo;&amp;rdquo; ) it wasn&amp;rsquo;t obvious for me that what&amp;rsquo;s going wrong.</description>
    </item>
    
    <item>
      <title>Desktop-Timetracking</title>
      <link>//blog.tolleiv.de/2009/05/desktop-timetracking/</link>
      <pubDate>Sun, 24 May 2009 09:28:48 +0000</pubDate>
      
      <guid>//blog.tolleiv.de/2009/05/desktop-timetracking/</guid>
      <description>I just saw that Heiner already published a new (stable) version of his Desktop-Timetracking software. Within this version he did a lot of refactoring - actually I helped out with some work and with lot&amp;rsquo;s of smart³ comments ;) - and I&amp;rsquo;m really proud that I got him into TDD. Check out DPDesktop at sourceforge.net</description>
    </item>
    
    <item>
      <title>visualized sorting algorithms</title>
      <link>//blog.tolleiv.de/2009/04/visualized-sorting-algorithms/</link>
      <pubDate>Thu, 16 Apr 2009 20:10:35 +0000</pubDate>
      
      <guid>//blog.tolleiv.de/2009/04/visualized-sorting-algorithms/</guid>
      <description>There are lot&amp;rsquo;s of visualizations for soting algorithms - this pages provides all relevant informations including runtime complexity and extra space requirements etc - and a easy to memorize domain name ;) ~ http://www.sorting-algorithms.com</description>
    </item>
    
  </channel>
</rss>